// <auto-generated />
using System;
using DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(RecifyDbContext))]
    [Migration("20241017154149_UpdatedDeleteInUploadedCsvToCascade")]
    partial class UpdatedDeleteInUploadedCsvToCascade
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DAL.Entities.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(32)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("DAL.Entities.LinkedDatabase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DatabaseCredentials")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DatabaseType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("LinkedDatabases");
                });

            modelBuilder.Entity("DAL.Entities.RecommenderConfiguration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AlgorithmType")
                        .HasColumnType("int");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DataSourceType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("RecommenderConfigurations");
                });

            modelBuilder.Entity("DAL.Entities.RecommenderToUploadedCSVs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConfigurationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UploadedCsvId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ConfigurationId");

                    b.HasIndex("UploadedCsvId");

                    b.ToTable("RecommenderToUploadedCSVs");
                });

            modelBuilder.Entity("DAL.Entities.UploadedCSV", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("UploadedCSVs");
                });

            modelBuilder.Entity("DAL.Entities.LinkedDatabase", b =>
                {
                    b.HasOne("DAL.Entities.Client", "Client")
                        .WithMany("LinkedDatabases")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("DAL.Entities.RecommenderConfiguration", b =>
                {
                    b.HasOne("DAL.Entities.Client", "Client")
                        .WithMany("RecommenderConfigurations")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("DAL.Entities.RecommenderToUploadedCSVs", b =>
                {
                    b.HasOne("DAL.Entities.RecommenderConfiguration", "RecommenderConfiguration")
                        .WithMany("RecommenderToUploadedCSVs")
                        .HasForeignKey("ConfigurationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAL.Entities.UploadedCSV", "UploadedCsv")
                        .WithMany("RecommenderToUploadedCSVs")
                        .HasForeignKey("UploadedCsvId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RecommenderConfiguration");

                    b.Navigation("UploadedCsv");
                });

            modelBuilder.Entity("DAL.Entities.UploadedCSV", b =>
                {
                    b.HasOne("DAL.Entities.Client", "Client")
                        .WithMany("UploadedCSVs")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("DAL.Entities.Client", b =>
                {
                    b.Navigation("LinkedDatabases");

                    b.Navigation("RecommenderConfigurations");

                    b.Navigation("UploadedCSVs");
                });

            modelBuilder.Entity("DAL.Entities.RecommenderConfiguration", b =>
                {
                    b.Navigation("RecommenderToUploadedCSVs");
                });

            modelBuilder.Entity("DAL.Entities.UploadedCSV", b =>
                {
                    b.Navigation("RecommenderToUploadedCSVs");
                });
#pragma warning restore 612, 618
        }
    }
}
